def merge_sort(arr):
    """
    Realiza o Merge Sort em uma lista.
    Divide e conquista: divide a lista em duas, ordena e mescla.
    """
    if len(arr) > 1:
        mid = len(arr) // 2
        left_half = arr[:mid]
        right_half = arr[mid:]

        # Dividir
        merge_sort(left_half)
        merge_sort(right_half)

        # Mesclar
        i = j = k = 0

        # Mesclando os dois subarrays
        while i < len(left_half) and j < len(right_half):
            if left_half[i] < right_half[j]:
                arr[k] = left_half[i]
                i += 1
            else:
                arr[k] = right_half[j]
                j += 1
            k += 1

        # Se restar elementos no left_half
        while i < len(left_half):
            arr[k] = left_half[i]
            i += 1
            k += 1

        # Se restar elementos no right_half
        while j < len(right_half):
            arr[k] = right_half[j]
            j += 1
            k += 1

    return arr  # Retorna a lista ordenada

# Exemplo de uso:
arr = [38, 27, 43, 3, 9, 82, 10]
sorted_arr = merge_sort(arr)
print(f"Lista ordenada: {sorted_arr}")

arr = ["zebra", "apple", "orange", "banana"]
sorted_arr = merge_sort(arr)
print(f"Lista de strings ordenada: {sorted_arr}")
